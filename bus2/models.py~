# -*-coding:utf-8-*-
from django.db import models

#当前位置坐标类
class NowPosition(models.Model):
    latitude = models.FloatField()
    longitude = models.FloatField()
    time = models.CharField(max_length = 100)

    class Meta:
        verbose_name = u'当前坐标'
        verbose_name_plural = u'当前坐标类'

    def __unicode__(self):
        return '%s' %self.id

#位置类
class Position(models.Model):
    latitude = models.FloatField()
    longitude = models.FloatField()
    time = models.CharField(max_length = 100)
    class Meta:
        verbose_name = u"坐标"
        verbose_name_plural = u"坐标类"

    def __unicode__(self):
        return '%s' %self.id

#激活Url
class RegisterUrl(models.Model):
    register_name = models.CharField(max_length = 100)

    class Meta:
        verbose_name = u'激活url'
        verbose_name_plural = u'激活url类'

    def __unicode__(self):
        return '%s' %self.register_name

#用户邮箱类
class Email(models.Model):
    email_name = models.EmailField(u'邮箱名')

    class Meta:
        verbose_name = u'邮箱'
        verbose_name_plural = u'邮箱类'

    def __unicode__(self):
        return '%s' %self.email_name

#汽车设备类
class Bus(models.Model):
    bus_id = models.CharField(max_length = 100, blank = True)
    bus_name = models.CharField(max_length = 100, blank = True)
    bus_position = models.ManyToManyField(Position, blank = True)
    bus_nowposition = models.ForeignKey(NowPosition)
    bus_type = models.IntegerField(default = 0)

    class Meta:
        verbose_name = u"校车"
        verbose_name_plural = u"校车类"

    def __unicode__(self):
        return '%s' %self.bus_name

#用户信息类
class WantInfoUser(models.Model):

    totalnum = 0
    user_id = models.CharField(max_length = 100, blank = True)
    user_password = models.CharField(max_length = 20)
    user_mode = models.IntegerField(u'是否付费',default = 0)
    user_bus = models.ManyToManyField(Bus,blank = True)
    user_email = models.ForeignKey(Email)
    user_auth = models.BooleanField(default = False)
    user_activate = models.BooleanField(default = False)
    class Meta:
        verbose_name = u'用户'
        verbose_name_plural = u'用户类'

    def __unicode__(self):
        return '%s' %self.user_id

    def user_login(self):

        if not self.user_auth:
            self.user_auth = True
            self.save()
        else:
            return 'error_havelogin'
        return 'success'

    def user_logout(self):

        if self.user_auth:
            self.user_auth = False
            self.save()
        else:
            return 'error_havelogout'
        return 'success'

#    def __init__(self,**kwargs):

#        WantInfoUser.totalnum += 1
#        super(models.Model,self).__init__(**kwargs)
